<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 2a7c919451f9a536431ba2117f8f90ae814c1c5f Maintainer: sammywg Status: ready -->
<refentry xml:id="function.levenshtein" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>levenshtein</refname>
  <refpurpose>Berechnet die Levenshtein-Distanz zwischen zwei Strings</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>levenshtein</methodname>
   <methodparam><type>string</type><parameter>string1</parameter></methodparam>
   <methodparam><type>string</type><parameter>string2</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>insertion_cost</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>replacement_cost</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>deletion_cost</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Die Levenshtein-Distanz bezeichnet die minimale Anzahl von Zeichen, die Sie
   ersetzen, einfügen oder löschen müssen, um <parameter>string1</parameter>
   in <parameter>string2</parameter> umzuwandeln. Die Komplexität des Algorithmus
   ist <literal>O(m*n)</literal>, wobei <literal>n</literal> und
   <literal>m</literal> die Länge von <parameter>string1</parameter> und
   <parameter>string2</parameter> darstellen (recht gut, im Vergleich zu
   <function>similar_text</function>, das <literal>O(max(n,m)**3)</literal> ist,
   aber trotzdem immer noch aufwendig).
  </para>
  <para>
   Wenn <parameter>insertion_cost</parameter>,
   <parameter>replacement_cost</parameter> und/oder
   <parameter>deletion_cost</parameter> ungleich <literal>1</literal> sind,
   passt sich der Algorithmus an, um die günstigsten Transformationen zu
   wählen. Wenn z.B. <code>$insertion_cost + $deletion_cost &lt;
   $replacement_cost</code>, werden keine Ersetzungen durchgeführt, sondern
   stattdessen Einfügungen und Löschungen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string1</parameter></term>
     <listitem>
      <para>
       Eine der Zeichenketten, für die die Levenshtein-Distanz zu berechnen ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string2</parameter></term>
     <listitem>
      <para>
       Eine der Zeichenketten, für die die Levenshtein-Distanz zu berechnen ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>insertion_cost</parameter></term>
     <listitem>
      <para>
       Definiert die Kosten des Einfügens.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement_cost</parameter></term>
     <listitem>
      <para>
       Definiert die Kosten des Ersetzens.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>deletion_cost</parameter></term>
     <listitem>
      <para>
       Definiert die Kosten des Löschens.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die Funktion gibt die Levenshtein-Distanz zwischen den beiden
   Argument-Strings oder -1 zurück, sofern eines der Argumente länger als 255
   Zeichen ist.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Vor dieser Version musste <function>levenshtein</function> entweder mit
       zwei oder fünf Argumenten aufgerufen werden.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>levenshtein</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// eingegebenes falsch geschriebenes Wort
$input = 'carrrot';

// Wörterarray als Vergleichsquelle
$words  = array('apple','pineapple','banana','orange',
                'radish','carrot','pea','bean','potato');

// noch keine kürzeste Distanz gefunden
$shortest = -1;

// durch die Wortliste gehen, um das ähnlichste Wort zu finden
foreach ($words as $word) {

    // berechne die Distanz zwischen Inputwort und aktuellem Wort
    $lev = levenshtein($input, $word);

    // auf einen exakten Treffer prüfen
    if ($lev == 0) {

        // das nächste Wort ist das Wort selbst (exakter Treffer)
        $closest = $word;
        $shortest = 0;

        // Schleife beenden, da wir einen exakten Treffer gefunden haben
        break;
    }

    // Wenn die Distanz kleiner ist als die nächste gefundene kleinste Distanz
    // ODER wenn ein nächstkleineres Wort noch nicht gefunden wurde
    if ($lev <= $shortest || $shortest < 0) {
        // setze den nächstliegenden Treffer und die kürzestes Distanz
        $closest  = $word;
        $shortest = $lev;
    }
}

echo "Eingegebenes Wort: $input\n";
if ($shortest == 0) {
    echo "Exakter Treffer gefunden: $closest\n";
} else {
    echo "Meinten Sie: $closest?\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Eingegebenes Word: carrrot
Meinten Sie: carrot?
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>soundex</function></member>
    <member><function>similar_text</function></member>
    <member><function>metaphone</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
